{
  "isOpenTerminal" : true,
  "isOutLogToTerminal" : true,
  "isOutLogToFile" : false,
  "projectPath" : "G:\\tablego-springboot",
  "scriptPath" : "G:\\tablego-springboot\\项目部署",
  "serverProjectPath" : "/opt/tablego-springboot",
  "profiles" : {
    "dev" : {
      "profile" : "dev",
      "tablegoAdminPort" : "6611",
      "tablegoBasicPort" : "6622",
      "tablegoIamPort" : "6633"
    },
    "test" : {
      "profile" : "test",
      "tablegoAdminPort" : "6611",
      "tablegoBasicPort" : "6622",
      "tablegoIamPort" : "6633"
    },
    "prod" : {
      "profile" : "prod",
      "tablegoAdminPort" : "6611",
      "tablegoBasicPort" : "6622",
      "tablegoIamPort" : "6633"
    }
  },
  "stepBatchConfig" : {
    "step1" : {
      "enable" : true,
      "remark" : "上传脚本文件",
      "batchConfig" : [ {
        "fileUploads" : [ {
          "fromPath" : [ "${scriptPath}\\ClearDockerBakImage.sh" ],
          "toPath" : "${serverProjectPath}",
          "enable" : true
        } ]
      }, {
        "commands" : [ {
          "command" : "cd ${serverProjectPath}"
        }, {
          "command" : "sed -i 's/\\r$//' ClearDockerBakImage.sh",
          "enable" : true
        }, {
          "command" : "sudo chmod +x ClearDockerBakImage.sh",
          "enable" : false
        } ]
      } ]
    },
    "step2" : {
      "enable" : true,
      "remark" : "更新Git代码并打包",
      "batchConfig" : [ {
        "runtimeExec" : [ {
          "command" : "${scriptPath}\\git-update-project.bat ${projectPath}",
          "enable" : false
        }, {
          "command" : "${scriptPath}\\maven-lifecycle.bat \"clean package\" ${projectPath}",
          "enable" : true
        } ]
      } ]
    },
    "step3" : {
      "enable" : true,
      "remark" : "部署 tablego-admin 工程",
      "batchConfig" : [ {
        "fileUploads" : [ {
          "fromPath" : [ "${projectPath}\\tablego-admin\\target\\tablego-admin.jar", "${projectPath}\\tablego-admin\\Dockerfile" ],
          "toPath" : "${serverProjectPath}/tablego-admin",
          "enable" : true
        } ]
      }, {
        "commands" : [ {
          "command" : "cd ${serverProjectPath}/tablego-admin"
        }, {
          "command" : "docker tag tablego-admin tablego-admin_`date +%Y%m%d%H%M%S`",
          "sleepSeconds" : 2,
          "enable" : true
        }, {
          "command" : "sh ../ClearDockerBakImage.sh -p tablego-admin_",
          "waitSeconds" : 2,
          "enable" : true
        }, {
          "command" : "docker rm -f tablego-admin",
          "containsStr" : "tablego-admin",
          "enable" : true
        }, {
          "command" : "docker build -t tablego-admin .",
          "containsStr" : "Successfully tagged",
          "enable" : true
        }, {
          "command" : "docker run -dp ${tablegoAdminPort}:8080 --name=tablego-admin tablego-admin --spring.profiles.active=${profile}",
          "sleepSeconds" : 3,
          "enable" : true
        }, {
          "command" : "docker logs -f tablego-admin",
          "containsStrSigquit" : "Started AdminApplication",
          "enable" : true
        }, {
          "command" : "ls"
        } ]
      } ]
    },
    "step4" : {
      "enable" : true,
      "remark" : "部署 tablego-basic 工程",
      "batchConfig" : [ {
        "fileUploads" : [ {
          "fromPath" : [ "${projectPath}\\tablego-basic\\target\\tablego-basic.jar", "${projectPath}\\tablego-basic\\Dockerfile" ],
          "toPath" : "${serverProjectPath}/tablego-basic",
          "enable" : true
        } ]
      }, {
        "commands" : [ {
          "command" : "cd ${serverProjectPath}/tablego-basic"
        }, {
          "command" : "docker tag tablego-basic tablego-basic_`date +%Y%m%d%H%M%S`",
          "sleepSeconds" : 2,
          "enable" : true
        }, {
          "command" : "sh ../ClearDockerBakImage.sh -p tablego-basic_",
          "waitSeconds" : 2,
          "enable" : true
        }, {
          "command" : "docker rm -f tablego-basic",
          "containsStr" : "tablego-basic",
          "enable" : true
        }, {
          "command" : "docker build -t tablego-basic .",
          "containsStr" : "Successfully tagged",
          "enable" : true
        }, {
          "command" : "docker run -dp ${tablegoBasicPort}:8080 --name=tablego-basic tablego-basic --spring.profiles.active=${profile}",
          "sleepSeconds" : 3,
          "enable" : true
        }, {
          "command" : "docker logs -f tablego-basic",
          "containsStrSigquit" : "Started BasicApplication",
          "enable" : true
        }, {
          "command" : "ls"
        } ]
      } ]
    },
    "step5" : {
      "enable" : true,
      "remark" : "部署 tablego-iam 工程",
      "batchConfig" : [ {
        "fileUploads" : [ {
          "fromPath" : [ "${projectPath}\\tablego-iam\\target\\tablego-iam.jar", "${projectPath}\\tablego-iam\\Dockerfile" ],
          "toPath" : "${serverProjectPath}/tablego-iam",
          "enable" : true
        } ]
      }, {
        "commands" : [ {
          "command" : "cd ${serverProjectPath}/tablego-iam"
        }, {
          "command" : "docker tag tablego-iam tablego-iam_`date +%Y%m%d%H%M%S`",
          "sleepSeconds" : 2,
          "enable" : true
        }, {
          "command" : "sh ../ClearDockerBakImage.sh -p tablego-iam_",
          "waitSeconds" : 2,
          "enable" : true
        }, {
          "command" : "docker rm -f tablego-iam",
          "containsStr" : "tablego-iam",
          "enable" : true
        }, {
          "command" : "docker build -t tablego-iam .",
          "containsStr" : "Successfully tagged",
          "enable" : true
        }, {
          "command" : "docker run -dp ${tablegoIamPort}:8080 --name=tablego-iam tablego-iam --spring.profiles.active=${profile}",
          "sleepSeconds" : 3,
          "enable" : true
        }, {
          "command" : "docker logs -f tablego-iam",
          "containsStrSigquit" : "Started IamApplication",
          "enable" : true
        }, {
          "command" : "ls"
        } ]
      } ]
    },
    "step6" : {
      "enable" : true,
      "remark" : "清理Docker虚悬镜像",
      "batchConfig" : [ {
        "commands" : [ {
          "command" : "docker image prune -f",
          "containsStr" : "Total reclaimed space"
        }, {
          "command" : "docker ps"
        } ]
      } ]
    }
  }
}